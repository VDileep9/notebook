{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT JS TASKS\\\\notebook\\\\src\\\\components\\\\HookTimer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HookTimer() {\n  _s();\n\n  const [timer, setTimer] = useState(0);\n  const intervalRef = useRef();\n  useEffect(() => {\n    interval = setInterval(() => {\n      setTimer(prevTimer => prevTimer + 1);\n    }, 1000);\n    return () => {\n      effect;\n    };\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HookTimer, \"6SeuWq4lEXFxZQNbxKRRLSy3T8s=\");\n\n_c = HookTimer;\nexport default HookTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"HookTimer\");","map":{"version":3,"sources":["E:/REACT JS TASKS/notebook/src/components/HookTimer.js"],"names":["React","useState","useEffect","useRef","HookTimer","timer","setTimer","intervalRef","interval","setInterval","prevTimer","effect","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,EAAoCC,MAApC,QAAkD,OAAlD;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBL,QAAQ,CAAC,CAAD,CAA/B;AACA,QAAMM,WAAW,GAAGJ,MAAM,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,QAAQ,GAACC,WAAW,CAAC,MAAI;AACvBH,MAAAA,QAAQ,CAACI,SAAS,IAAGA,SAAS,GAAC,CAAvB,CAAR;AACD,KAFmB,EAElB,IAFkB,CAApB;AAGA,WAAM,MAAI;AACRC,MAAAA,MAAM;AACP,KAFD;AAGH,GAPQ,EAOP,CAACC,KAAD,CAPO,CAAT;AAQF,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAjBQR,S;;KAAAA,S;AAmBT,eAAeA,SAAf","sourcesContent":["import React, { useState,useEffect, useRef } from 'react'\r\n\r\nfunction HookTimer() {\r\n    const [timer,setTimer]=useState(0)\r\n    const intervalRef = useRef()\r\n\r\n    useEffect(()=>{\r\n        interval=setInterval(()=>{\r\n          setTimer(prevTimer =>prevTimer+1)\r\n        },1000)\r\n        return()=>{\r\n          effect\r\n        }\r\n    },[input])\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HookTimer"]},"metadata":{},"sourceType":"module"}